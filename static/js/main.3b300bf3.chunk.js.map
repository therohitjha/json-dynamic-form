{"version":3,"sources":["components/DynamicForm/index.js","validators/index.js","validators/check-name.js","validators/special-name.js","validators/validate-rating.js","App.js","registerServiceWorker.js","index.js"],"names":["DynamicForm","state","validate","errors","validators","props","console","log","forEach","v","fieldValue","key","validations","vd","validator","undefined","push","message","onSubmit","e","preventDefault","Object","entries","length","alert","JSON","stringify","onChange","type","setState","target","value","found","find","d","data","filter","others","renderForm","model","map","m","name","input","className","options","o","checked","Fragment","label","indexOf","htmlFor","title","this","nextProps","prevState","defaultValues","id","React","Component","checkName","test","specialName","validateRating","parsedInput","Number","App","age","qualification","rating","gender","city","skills","current","Date","slice","onEdit","record","join","onClick","Validator","required","min","max","border","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3b300bf3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./form.css\";\n\nexport default class DynamicForm extends React.Component {\n  state = {};\n  \n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log(\"gds:p:s\", nextProps.defaultValues, prevState);\n\n\n    if (\n      nextProps.defaultValues &&\n      nextProps.defaultValues.id !== prevState.id\n    ) {\n      //   Object.keys(prevState).forEach(k => {\n      //     derivedState[k] = \"\";\n      //   });\n      return {\n        ...nextProps.defaultValues\n      };\n    }\n\n    console.log(\"no state change\");\n    return null;\n  }\n\n  // Validate form fields (This is configured in DynamicForm as props)\n  validate = () => {\n    let errors = {};\n    const validators = this.props.validators;\n    console.log(validators);\n    validators.forEach((v) => {\n      console.log(v);\n      let fieldValue = this.state[v.key];\n      console.log(`validating ${v.key}`);\n      v.validations.forEach((vd) => {\n        let r = vd.validator(fieldValue);\n        if (!r) {\n          if (errors[v.key] === undefined) {\n            errors[v.key] = [];\n          }\n          //errors.push(`${v.key} ${vd.message}`)\n          // errors.push({\n          //   [v.key]:  vd.message\n          // });\n          errors[v.key].push(vd.message);\n        }\n      }); \n    })\n\n    console.log(\"ERRORS: \", errors);\n\n    return errors;\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    let errors = this.validate();\n    if (Object.entries(errors).length !== 0) {\n      alert(JSON.stringify(errors));\n      return false;\n    }\n    \n    if (this.props.onSubmit) this.props.onSubmit(this.state);\n  };\n\n  onChange = (e, key, type = \"single\") => {\n    //console.log(`${key} changed ${e.target.value} type ${type}`);\n    if (type === \"single\") {\n      this.setState(\n        {\n          [key]: e.target.value\n        },\n        () => {}\n      );\n    } else {\n      // Array of values (e.g. checkbox): TODO: Optimization needed.\n      let found = this.state[key]\n        ? this.state[key].find(d => d === e.target.value)\n        : false;\n\n      if (found) {\n        let data = this.state[key].filter(d => {\n          return d !== found;\n        });\n        this.setState({\n          [key]: data\n        });\n      } else {\n        console.log(\"found\", key, this.state[key]);\n        // this.setState({\n        //   [key]: [e.target.value, ...this.state[key]]\n        // });\n        let others = this.state[key] ? [...this.state[key]] : [];\n        this.setState({\n          [key]: [e.target.value, ...others]\n        });\n      }\n    }\n  };\n\n  renderForm = () => {\n    let model = this.props.model;\n\n    let formUI = model.map(m => {\n      let key = m.key;\n      let type = m.type || \"text\";\n      let props = m.props || {};\n      let name = m.name;\n      let value = m.value;\n\n      let target = key;\n      value = this.state[target] || \"\";\n\n      let input = (\n        <input\n          {...props}\n          className=\"form-input\"\n          type={type}\n          key={key}\n          name={name}\n          value={value}\n          onChange={e => {\n            this.onChange(e, target);\n          }}\n        />\n      );\n\n      if (type === \"radio\") {\n        input = m.options.map(o => {\n          let checked = o.value === value;\n          return (\n            <React.Fragment key={\"fr\" + o.key}>\n              <input\n                {...props}\n                className=\"form-input\"\n                type={type}\n                key={o.key}\n                name={o.name}\n                checked={checked}\n                value={o.value}\n                onChange={e => {\n                  this.onChange(e, o.name);\n                }}\n              />\n              <label key={\"ll\" + o.key}>{o.label}</label>\n            </React.Fragment>\n          );\n        });\n        input = <div className=\"form-group-radio\">{input}</div>;\n      }\n\n      if (type === \"select\") {\n        input = m.options.map(o => {\n          return (\n            <option\n              {...props}\n              className=\"form-input\"\n              key={o.key}\n              value={o.value}\n            >\n              {o.value}\n            </option>\n          );\n        });\n\n        //console.log(\"Select default: \", value);\n        input = (\n          <select\n            value={value}\n            onChange={e => {\n              this.onChange(e, m.key);\n            }}\n          >\n            {input}\n          </select>\n        );\n      }\n\n      if (type === \"checkbox\") {\n        input = m.options.map(o => {\n          //let checked = o.value == value;\n          let checked = false;\n          if (value && value.length > 0) {\n            checked = value.indexOf(o.value) > -1 ? true : false;\n          }\n          //console.log(\"Checkbox: \", checked);\n          return (\n            <React.Fragment key={\"cfr\" + o.key}>\n              <input\n                {...props}\n                className=\"form-input\"\n                type={type}\n                key={o.key}\n                name={o.name}\n                checked={checked}\n                value={o.value}\n                onChange={e => {\n                  this.onChange(e, m.key, \"multiple\");\n                }}\n              />\n              <label key={\"ll\" + o.key}>{o.label}</label>\n            </React.Fragment>\n          );\n        });\n\n        input = <div className=\"form-group-checkbox\">{input}</div>;\n      }\n\n      return (\n        <div key={\"g\" + key} className=\"form-group\">\n          <label className=\"form-label\" key={\"l\" + key} htmlFor={key}>\n            {m.label}\n          </label>\n          {input}\n        </div>\n      );\n    });\n    return formUI;\n  };\n\n  render() {\n    let title = this.props.title || \"Dynamic Form\";\n\n    return (\n      <div className={this.props.className}>\n        <h3 className=\"form-title\">{title}</h3>\n        <form\n          className=\"dynamic-form\"\n          onSubmit={e => {\n            this.onSubmit(e);\n          }}\n        >\n          {this.renderForm()}\n          <div className=\"form-actions\">\n            <button type=\"submit\">submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import checkName from './check-name';\nimport specialName from './special-name';\nimport validateRating from './validate-rating';\n\nexport default  {\n  checkName,\n  specialName,\n  validateRating\n}","export default function (input) {\n  return (/^[A-Z]/i.test(input));\n}","export default function (input) {\n   return input.indexOf(\"superman\") === -1;\n}","export default function (input) {\n  let parsedInput = Number(input);\n  return (parsedInput > 0 && parsedInput <=5);\n}","import React, { Component } from \"react\";\nimport DynamicForm from \"./components/DynamicForm\";\nimport Validator from './validators';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    data: [\n      {\n        id: 1,\n        name: \"a\",\n        age: 29,\n        qualification: \"B.Com\",\n        rating: 3,\n        gender: \"male\",\n        city: \"Kerala\",\n        skills: [\"reactjs\", \"angular\", \"vuejs\"]\n      },\n      {\n        id: 2,\n        name: \"b\",\n        age: 35,\n        qualification: \"B.Sc\",\n        rating: 5,\n        gender: \"female\",\n        city: \"Mumbai\",\n        skills: [\"reactjs\", \"angular\"]\n      },\n      {\n        id: 3,\n        name: \"c\",\n        age: 42,\n        qualification: \"B.E\",\n        rating: 3,\n        gender: \"female\",\n        city: \"Bangalore\",\n        skills: [\"reactjs\"]\n      }\n    ],\n    current: {}\n  };\n\n\n  onSubmit = model => {\n    let data = [];\n    if (model.id) {\n      data = this.state.data.filter(d => {\n        return d.id !== model.id;\n      });\n    } else {\n      model.id = +new Date();\n      data = this.state.data.slice();\n    }\n\n    this.setState({\n      data: [model, ...data],\n      current: {} // todo\n    });\n  };\n\n  onEdit = id => {\n    let record = this.state.data.find(d => {\n      return d.id === id;\n    });\n    //alert(JSON.stringify(record));\n    this.setState({\n      current: record\n    });\n  };\n\n\n\n  render() {\n    let data = this.state.data.map(d => {\n      return (\n        <tr key={d.id}>\n          <td>{d.name}</td>\n          <td>{d.age}</td>\n          <td>{d.qualification}</td>\n          <td>{d.gender}</td>\n          <td>{d.rating}</td>\n          <td>{d.city}</td>\n          <td>{d.skills && d.skills.join(\",\")}</td>\n          <td>\n            <button\n              onClick={() => {\n                this.onEdit(d.id);\n              }}\n            >\n              edit\n            </button>\n          </td>\n        </tr>\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"form-actions\">\n        \n        </div>\n        <DynamicForm\n          key={this.state.current.id}\n          className=\"form\"\n          title=\"Registration\"\n          defaultValues={this.state.current}\n          validators={[\n            {\n              key: \"name\", validations: [\n                {\n                  \"validator\": Validator.checkName,\n                  \"message\": \"Name should start with alphabets\"\n                },\n                {\n                  \"validator\": Validator.specialName,\n                  \"message\": \"Name should contain the word superman\"\n                },\n              ]\n            },\n            {\n              key: \"rating\", validations: [\n                {\n                  \"validator\": Validator.validateRating,\n                  \"message\": \"Rating should be between 0 and 5\"\n                },\n              ]\n            }\n          ]}\n          model={[\n            { key: \"name\", label: \"Name\", props: { required: true } },\n            { key: \"age\", label: \"Age\", type: \"number\" },\n            {\n              key: \"rating\",\n              label: \"Rating\",\n              type: \"number\",\n              props: { min: 0, max: 5 }\n            },\n            {\n              key: \"gender\",\n              label: \"Gender\",\n              type: \"radio\",\n              options: [\n                { key: \"male\", label: \"Male\", name: \"gender\", value: \"male\" },\n                {\n                  key: \"female\",\n                  label: \"Female\",\n                  name: \"gender\",\n                  value: \"female\"\n                }\n              ]\n            },\n            { key: \"qualification\", label: \"Qualification\" },\n            {\n              key: \"city\",\n              label: \"City\",\n              type: \"select\",\n              value: \"Kerala\",\n              options: [\n                { key: \"blank\", label: \"Select City\", value: \"Select City\" },\n                { key: \"mumbai\", label: \"Mumbai\", value: \"Mumbai\" },\n                { key: \"bangalore\", label: \"Bangalore\", value: \"Bangalore\" },\n                { key: \"kerala\", label: \"Kerala\", value: \"Kerala\" }\n              ]\n            },\n            {\n              key: \"skills\",\n              label: \"Skills\",\n              type: \"checkbox\",\n              options: [\n                { key: \"reactjs\", label: \"ReactJS\", value: \"reactjs\" },\n                { key: \"angular\", label: \"Angular\", value: \"angular\" },\n                { key: \"vuejs\", label: \"VueJS\", value: \"vuejs\" }\n              ]\n            }\n          ]}\n          onSubmit={model => {\n            this.onSubmit(model);\n          }}\n        />\n\n        <table border=\"1\">\n          <tbody>{data}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}